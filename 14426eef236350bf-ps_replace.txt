// ---- Created with 3Dmigoto v1.3.16 on Mon May 15 19:00:17 2023

// dof blur

Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb0 : register(b0)
{
  float4 cb0[31];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = cb0[30].xy + v1.xy;
  r1.xyz = t3.SampleLevel(s0_s, r0.xy, 0).xyz;
  r0.z = r1.x + r1.y;
  r0.z = r0.z + r1.z;
  r0.z = cmp(0 < r0.z);
  r2.xyz = t0.SampleLevel(s0_s, v1.xy, 0).xyz;
  r1.xyz = r0.zzz ? r1.xyz : r2.xyz;
  r3.xyz = r2.xyz + -r1.xyz;
  r0.z = t1.SampleLevel(s0_s, r0.xy, 0).x; 
  
  // #define MAX -0.5
  // #define MIN -1.0
  // r5.w = 1 - saturate(
  //     (-t1.SampleLevel(s0_s, cb0[30].xy + v1.xy, 0).x - MIN) / (MAX - MIN)
  //   );
  r5.w = saturate(
        t1.SampleLevel(s0_s, cb0[30].xy + v1.xy, 0).x
    );
  // r5.w = sqrt(r5.w);
  
  r0.z = -0.5 + r0.z;
  r0.w = saturate(-r0.z * cb0[29].x + 1.20000005);
  r0.z = saturate(r0.z * cb0[29].x + 1.20000005);
  r3.xyz = r0.www * r3.xyz + r1.xyz;
  r4.xyz = t2.SampleLevel(s0_s, r0.xy, 0).xyz;
  r0.x = t4.SampleLevel(s1_s, r0.xy, 0).x;
  r0.x = 1 + -r0.x;
  r0.y = r4.x + r4.y;
  r0.y = r0.y + r4.z;
  r0.y = cmp(0 < r0.y);
  r4.xyz = r0.yyy ? r4.xyz : r2.xyz;
  r3.xyz = -r4.xyz + r3.xyz;
  r0.y = cmp(r0.x < 1);
  r3.w = cmp(0 < r0.x);
  r0.y = r0.y ? r3.w : 0;
  r0.z = min(r0.x, r0.z);
  r0.x = r0.y ? r0.z : r0.x;
  r3.xyz = r0.xxx * r3.xyz + r4.xyz;
  r1.w = 1 + -r0.w;
  r0.y = cmp(r0.w < 1);
  r2.w = 0;
  r1.xyzw = r0.yyyy ? r1.xyzw : r2.xyzw;
  r4.w = 1 + -r0.x;
  r0.x = cmp(r0.x < 1);
  r1.xyzw = r0.xxxx ? r4.xyzw : r1.xyzw;
  r0.x = r0.y ? r0.x : 0;
  r3.w = 1;
  r0.xyzw = r0.xxxx ? r3.xyzw : r1.xyzw;
  o0.xyz = r0.xyz;
  r0.x = t5.SampleLevel(s0_s, v1.xy, 0).x;
  o1.x = saturate(r0.w + r0.x);
  o1.yzw = float3(0,0,0);
  
  o0.xyz = float3(r5.w, r5.w, r5.w);
  o0.w = 0;
  o1.x = 1;

  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon May 15 19:00:17 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[31], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 5
add r0.xy, v1.xyxx, cb0[30].xyxx
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t3.xyzw, s0, l(0.000000)
add r0.z, r1.y, r1.x
add r0.z, r1.z, r0.z
lt r0.z, l(0.000000), r0.z
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t0.xyzw, s0, l(0.000000)
movc r1.xyz, r0.zzzz, r1.xyzx, r2.xyzx
add r3.xyz, -r1.xyzx, r2.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r0.xyxx, t1.yzxw, s0, l(0.000000)
add r0.z, r0.z, l(-0.500000)
mad_sat r0.w, -r0.z, cb0[29].x, l(1.200000)
mad_sat r0.z, r0.z, cb0[29].x, l(1.200000)
mad r3.xyz, r0.wwww, r3.xyzx, r1.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r0.xyxx, t2.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t4.xyzw, s1, l(0.000000)
add r0.x, -r0.x, l(1.000000)
add r0.y, r4.y, r4.x
add r0.y, r4.z, r0.y
lt r0.y, l(0.000000), r0.y
movc r4.xyz, r0.yyyy, r4.xyzx, r2.xyzx
add r3.xyz, r3.xyzx, -r4.xyzx
lt r0.y, r0.x, l(1.000000)
lt r3.w, l(0.000000), r0.x
and r0.y, r0.y, r3.w
min r0.z, r0.z, r0.x
movc r0.x, r0.y, r0.z, r0.x
mad r3.xyz, r0.xxxx, r3.xyzx, r4.xyzx
add r1.w, -r0.w, l(1.000000)
lt r0.y, r0.w, l(1.000000)
mov r2.w, l(0)
movc r1.xyzw, r0.yyyy, r1.xyzw, r2.xyzw
add r4.w, -r0.x, l(1.000000)
lt r0.x, r0.x, l(1.000000)
movc r1.xyzw, r0.xxxx, r4.xyzw, r1.xyzw
and r0.x, r0.y, r0.x
mov r3.w, l(1.000000)
movc r0.xyzw, r0.xxxx, r3.xyzw, r1.xyzw
mov o0.xyz, r0.xyzx
mov o0.w, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t5.xyzw, s0, l(0.000000)
add_sat o1.x, r0.x, r0.w
mov o1.yzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
